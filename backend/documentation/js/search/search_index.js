var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.155,1,1.928]],["body/modules/AppModule.html",[0,1.662,1,3.476,2,1.223,3,1.223,4,1.503,5,1.503,6,1.223,7,2.131,8,1.503,9,2.216,10,2.216,11,2.953,12,0.036,13,2.953,14,2.131,15,1.503,16,1.503,17,0.314,18,0.271,19,0.271,20,2.678,21,2.388,22,1.352,23,2.678,24,3.796,25,4.798,26,0.761,27,2.678,28,1.009,29,1.009,30,0.51,31,0.919,32,3.796,33,1.352,34,1.685,35,0.839,36,2.678,37,3.796,38,0.761,39,2.678,40,2.678,41,2.216,42,1.685,43,1.11,44,1.685,45,2.678,46,2.388,47,2.678,48,1.685,49,2.678,50,2.678,51,2.678,52,1.223,53,0.314,54,0.048,55,1.352,56,2.678,57,2.678,58,0.016,59,0.022,60,0.016]],["title/injectables/AuthCheckerMiddleware.html",[48,1.928,61,1.051]],["body/injectables/AuthCheckerMiddleware.html",[12,0.036,17,0.373,18,0.322,19,0.322,22,2.16,26,0.905,28,1.2,29,1.2,30,0.606,31,1.092,33,1.608,34,2.003,35,0.784,38,0.905,48,2.691,53,0.373,54,0.057,55,1.608,58,0.019,59,0.025,60,0.019,61,1.467,62,1.788,63,2.635,64,0.674,65,3.054,66,4.278,67,4.831,68,4.274,69,3.249,70,4.274,71,3.184,72,3.184,73,3.54,74,2.003,75,2.273,76,2.401,77,2.273,78,1.608,79,2.635,80,3.184,81,2.273]],["title/classes/Card.html",[54,0.055,82,1.547]],["body/classes/Card.html",[12,0.036,17,0.307,18,0.265,19,0.265,26,1.484,30,1.023,35,0.567,53,0.307,54,0.047,58,0.015,59,0.022,60,0.015,64,0.554,82,1.887,83,1.086,84,2.168,85,2.351,86,4.357,87,1.707,88,3.11,89,2.446,90,3.605,91,3.605,92,3.11,93,3.605,94,1.968,95,3.728,96,3.11,97,2.62,98,2.168,99,2.62,100,2.62,101,2.62,102,2.164,103,3.738,104,2.988,105,2.62,106,2.168,107,2.668,108,2.62,109,2.62,110,3.391,111,2.668,112,1.871,113,2.668,114,1.323,115,3.391,116,1.648,117,1.871,118,3.738]],["title/controllers/CardController.html",[119,1.547,120,1.928]],["body/controllers/CardController.html",[12,0.037,17,0.357,18,0.308,19,0.308,30,0.791,35,0.832,38,0.867,52,1.393,53,0.357,54,0.055,55,1.54,58,0.018,59,0.024,60,0.018,76,1.712,77,2.178,81,3.791,82,2.386,89,2.333,119,1.54,120,2.614,121,2.524,122,2.524,123,3.439,124,2.098,125,2.524,126,2.178,127,3.439,128,3.439,129,1.54,130,2.333,131,2.524,132,2.524,133,2.524,134,2.524,135,2.524,136,2.524,137,1.712,138,3.05,139,1.54,140,2.178,141,3.439,142,2.178,143,2.524,144,2.524,145,2.524,146,2.524,147,1.919]],["title/modules/CardModule.html",[0,1.155,11,1.72]],["body/modules/CardModule.html",[0,1.812,2,1.441,3,1.441,4,1.772,5,1.772,6,1.441,7,2.7,8,2.7,11,3.175,12,0.036,14,2.387,15,1.772,16,1.772,17,0.37,18,0.319,19,0.319,21,1.986,35,0.815,38,0.897,42,1.986,43,1.308,52,1.942,53,0.37,54,0.057,58,0.019,59,0.025,60,0.019,82,1.594,120,3.026,124,3.022,125,2.612,126,2.254,148,2.612,149,2.612,150,2.612,151,3.157,152,3.157,153,3.157]],["title/injectables/CardService.html",[61,1.051,124,1.547]],["body/injectables/CardService.html",[12,0.036,17,0.421,18,0.363,19,0.363,26,1.022,28,1.355,29,1.355,31,1.233,35,0.822,38,1.022,43,1.49,53,0.421,54,0.064,58,0.021,59,0.027,60,0.021,61,1.589,62,2.018,82,1.815,85,2.915,114,1.815,124,2.34,126,2.567,129,1.815,154,2.975,155,4.243,156,2.018,157,2.975,158,3.595,159,3.835,160,2.975,161,3.595,162,2.975]],["title/classes/ConfigService.html",[54,0.055,163,2.188]],["body/classes/ConfigService.html",[12,0.036,17,0.223,18,0.192,19,0.192,22,1.488,26,1.319,28,1.359,29,1.359,30,0.884,31,1.237,33,2.217,35,0.289,43,0.789,44,1.854,53,0.223,54,0.034,58,0.011,59,0.017,60,0.011,64,0.403,69,1.198,83,0.789,94,2.012,104,1.198,137,2.464,139,1.488,156,1.069,163,2.104,164,1.36,165,3.411,166,2.984,167,4.059,168,4.059,169,2.984,170,2.947,171,4.059,172,1.904,173,2.439,174,1.904,175,2.439,176,2.947,177,1.904,178,1.904,179,1.904,180,1.904,181,3.606,182,2.947,183,4.059,184,1.904,185,1.36,186,2.898,187,1.576,188,1.904,189,1.576,190,1.576,191,1.576,192,1.36,193,1.36,194,1.904,195,1.904,196,1.904,197,1.904,198,1.904,199,1.904,200,1.904,201,2.268,202,1.904,203,1.904,204,1.904,205,1.198,206,1.904,207,1.904,208,3.633,209,1.904,210,1.904,211,1.904,212,2.439,213,1.904,214,1.576,215,1.904,216,1.904,217,1.904,218,1.904,219,1.904,220,1.904,221,1.904,222,1.904,223,1.904,224,1.576,225,1.904,226,1.904,227,1.904,228,1.904,229,1.904,230,1.904,231,1.904,232,1.904,233,1.904,234,1.904,235,1.904,236,1.904,237,1.904,238,1.576,239,1.576,240,1.576,241,1.576,242,1.576,243,1.576]],["title/classes/CreateCardDto.html",[54,0.055,244,2.188]],["body/classes/CreateCardDto.html",[12,0.036,17,0.405,18,0.349,19,0.349,26,1.43,30,0.958,35,0.525,53,0.405,54,0.081,58,0.02,59,0.027,60,0.02,64,0.731,83,1.433,87,2.063,90,4.165,91,4.165,93,4.165,94,1.702,95,3.593,102,2.211,244,3.226,245,2.862,246,5.785,247,3.458,248,3.458,249,3.458,250,2.862]],["title/classes/HttpError.html",[54,0.055,251,2.188]],["body/classes/HttpError.html",[12,0.035,17,0.39,18,0.337,19,0.337,26,1.253,28,1.255,29,1.255,30,0.634,31,1.142,35,0.506,53,0.39,54,0.06,58,0.02,59,0.026,60,0.02,64,0.704,78,1.682,83,1.38,85,2.773,87,2.013,94,1.862,102,2.047,156,1.87,165,3.108,205,2.773,251,3.147,252,2.756,253,3.155,254,4.408,255,4.526,256,4.408,257,3.331,258,3.331,259,3.331,260,3.331,261,3.331,262,3.331,263,3.331,264,3.331,265,3.331]],["title/interfaces/IRequestError.html",[266,1.72,267,2.188]],["body/interfaces/IRequestError.html",[12,0.035,17,0.443,18,0.382,19,0.382,30,1,53,0.443,58,0.022,59,0.028,60,0.022,64,0.8,87,2.186,94,2.191,102,2.176,205,3.472,253,3.098,266,2.123,267,3.417,268,2.701,269,3.13,270,4.567]],["title/interfaces/IRequestResult.html",[266,1.72,271,2.188]],["body/interfaces/IRequestResult.html",[12,0.035,17,0.421,18,0.363,19,0.363,30,0.976,31,1.589,53,0.421,58,0.021,59,0.027,60,0.021,64,0.76,69,2.262,87,2.116,94,1.932,102,2.125,190,2.975,191,2.975,192,2.567,193,2.567,253,3.04,266,2.018,268,2.567,270,4.482,271,3.308,272,2.975,273,5.416,274,5.127,275,3.595,276,3.595]],["title/classes/Logger.html",[54,0.055,78,1.547]],["body/classes/Logger.html",[12,0.036,17,0.298,18,0.116,19,0.116,22,0.985,26,1.11,28,1.472,29,1.472,30,0.744,31,1.34,33,1.972,34,3.072,35,0.386,53,0.134,54,0.021,58,0.007,59,0.011,60,0.007,64,0.243,65,1.393,74,1.228,78,0.985,83,0.475,94,2.15,102,1.055,104,2.303,137,1.095,139,0.985,165,2.457,175,1.615,187,1.615,192,2.614,201,0.722,205,1.602,224,1.615,253,1.429,255,3.674,277,0.95,278,5.329,279,1.951,280,1.951,281,1.951,282,1.951,283,1.148,284,1.951,285,1.148,286,1.951,287,1.148,288,1.951,289,1.148,290,1.951,291,2.485,292,2.485,293,2.485,294,2.485,295,1.148,296,1.615,297,1.951,298,1.148,299,1.951,300,1.148,301,1.615,302,1.615,303,2.485,304,3.366,305,1.148,306,3.003,307,1.148,308,1.148,309,1.148,310,2.546,311,1.148,312,1.148,313,1.148,314,1.148,315,1.148,316,1.951,317,3.003,318,1.148,319,5.453,320,1.951,321,1.951,322,1.148,323,3.003,324,1.951,325,4.112,326,1.951,327,1.951,328,3.003,329,1.951,330,1.951,331,1.951,332,1.615,333,1.951,334,0.95,335,1.951,336,1.951,337,1.951,338,0.95,339,1.951,340,1.951,341,1.951,342,1.951,343,1.951,344,1.951,345,1.951,346,1.951,347,1.615,348,1.615,349,1.951,350,1.615,351,3.661,352,1.951,353,1.951,354,1.951,355,1.951,356,1.951,357,1.951,358,1.951,359,1.951,360,1.951,361,1.951,362,1.951,363,1.951,364,1.951,365,1.148,366,1.148,367,1.615]],["title/injectables/LoggerMiddleware.html",[46,1.928,61,1.051]],["body/injectables/LoggerMiddleware.html",[12,0.036,17,0.331,18,0.285,19,0.285,22,1.99,26,0.803,28,1.064,29,1.064,30,0.538,31,0.969,33,1.426,34,2.479,35,0.689,38,0.803,46,2.479,53,0.331,54,0.051,55,1.426,58,0.017,59,0.023,60,0.017,61,1.352,62,1.585,64,0.597,65,2.813,68,4.635,69,3.09,70,4.064,73,3.261,74,3.366,75,2.017,78,1.426,79,2.337,201,3.09,253,2.212,291,3.261,292,3.261,293,3.261,294,3.261,296,2.337,368,2.337,369,3.941,370,2.825,371,2.825,372,2.825,373,2.825,374,2.825,375,2.825,376,2.825,377,2.825]],["title/classes/News.html",[54,0.055,378,1.547]],["body/classes/News.html",[12,0.036,17,0.381,18,0.329,19,0.329,26,1.388,30,0.992,35,0.659,53,0.381,54,0.058,58,0.019,59,0.025,60,0.019,64,0.689,83,1.349,87,1.983,88,3.488,89,2.742,92,3.488,94,1.964,95,3.488,96,3.488,98,2.694,102,1.799,106,2.694,107,3.1,110,2.325,111,3.1,112,2.325,113,3.1,114,1.644,115,2.325,116,2.048,117,2.325,378,2.192,379,2.694,380,3.256,381,3.256,382,3.256]],["title/controllers/NewsController.html",[119,1.547,383,1.928]],["body/controllers/NewsController.html",[12,0.037,17,0.367,18,0.316,19,0.316,30,0.805,35,0.838,38,0.889,52,1.429,53,0.367,54,0.056,55,1.58,58,0.018,59,0.025,60,0.018,76,1.757,77,2.234,81,3.019,89,2.373,119,1.58,122,2.59,123,3.499,127,3.499,128,3.499,129,1.58,130,2.373,131,2.59,132,2.59,133,2.59,134,2.59,135,2.59,136,2.59,137,1.757,139,1.58,140,2.234,141,3.499,142,2.234,146,2.59,147,1.969,378,2.418,383,2.66,384,2.59,385,2.135,386,2.59,387,2.234,388,3.129]],["title/modules/NewsModule.html",[0,1.155,13,1.72]],["body/modules/NewsModule.html",[0,1.812,2,1.441,3,1.441,4,1.772,5,1.772,6,1.441,7,2.7,8,2.7,12,0.036,13,3.175,14,2.387,15,1.772,16,1.772,17,0.37,18,0.319,19,0.319,21,1.986,35,0.815,38,0.897,42,1.986,43,1.308,52,1.942,53,0.37,54,0.057,58,0.019,59,0.025,60,0.019,378,1.594,383,3.026,385,3.022,386,2.612,387,2.254,389,2.612,390,2.612,391,2.612,392,3.157,393,3.157,394,3.157]],["title/injectables/NewsService.html",[61,1.051,385,1.547]],["body/injectables/NewsService.html",[12,0.036,17,0.421,18,0.363,19,0.363,26,1.022,28,1.355,29,1.355,31,1.233,35,0.822,38,1.022,43,1.49,53,0.421,54,0.064,58,0.021,59,0.027,60,0.021,61,1.589,62,2.018,85,2.915,114,1.815,129,1.815,155,4.243,156,2.018,157,2.975,159,3.835,160,2.975,162,2.975,378,1.815,385,2.34,387,2.567,395,2.975,396,3.595,397,3.595]],["title/guards/RestfulCrudRoleGuard.html",[130,1.72,398,2.188]],["body/guards/RestfulCrudRoleGuard.html",[12,0.037,17,0.231,18,0.199,19,0.199,22,1.529,26,0.86,28,1.141,29,1.141,30,0.787,31,1.038,33,0.996,35,0.559,38,0.56,53,0.231,54,0.035,55,0.996,58,0.012,59,0.018,60,0.012,61,1.038,64,0.417,74,1.24,76,2.84,87,0.9,104,3.084,119,0.996,129,0.996,130,1.699,137,1.107,140,1.408,142,1.408,143,1.632,144,1.632,145,1.632,156,1.699,165,1.904,169,1.632,173,2.505,185,1.408,189,2.505,201,2.961,208,4.674,348,1.632,350,3.691,399,1.972,400,1.632,401,3.685,402,4.134,403,1.972,404,1.972,405,3.027,406,4.134,407,1.972,408,1.972,409,1.972,410,1.972,411,1.972,412,3.027,413,1.972,414,1.972,415,1.972,416,1.972,417,1.972,418,1.972,419,1.972,420,1.972,421,1.972,422,1.972,423,1.632,424,1.972,425,1.972,426,1.972,427,4.902,428,2.505,429,1.972,430,1.972,431,1.972,432,1.972,433,3.027,434,1.972,435,1.972,436,1.972,437,1.972,438,1.972,439,1.972,440,1.972,441,1.972,442,1.972,443,1.972,444,1.972,445,1.972,446,1.972]],["title/classes/__entity__.html",[54,0.055,447,2.188]],["body/classes/__entity__.html",[12,0.036,17,0.45,18,0.388,19,0.388,30,0.732,35,0.734,53,0.45,54,0.069,58,0.023,59,0.028,60,0.023,83,1.592,88,2.744,89,2.157,92,2.744,94,1.822,96,3.452,102,1.592,107,2.744,110,2.744,111,3.452,112,2.744,113,3.452,114,1.94,115,2.744,116,2.418,117,2.744,447,2.744,448,3.18,449,3.843]],["title/modules/__module__.html",[0,1.155,450,1.72]],["body/modules/__module__.html",[0,1.858,2,1.514,3,1.514,4,1.861,5,1.861,6,1.514,7,2.467,8,2.767,12,0.036,14,2.467,15,1.861,16,1.861,17,0.388,18,0.335,19,0.335,21,2.086,35,0.829,38,0.942,42,2.086,43,1.374,52,1.514,53,0.388,54,0.059,58,0.019,59,0.026,60,0.019,147,3.436,450,2.947,451,2.744,452,2.744,453,3.316,454,3.316,455,3.316,456,4.395,457,3.316,458,4.93,459,3.316,460,3.316,461,3.316]],["title/coverage.html",[462,2.976]],["body/coverage.html",[6,1.159,12,0.036,19,0.256,30,0.483,44,1.596,46,1.596,48,1.596,54,0.095,58,0.015,59,0.021,60,0.015,61,1.702,63,2.1,78,1.281,82,1.281,84,2.1,119,2.161,120,1.596,121,2.1,124,1.281,130,1.424,139,1.281,154,2.1,163,1.812,164,2.608,244,1.812,245,2.1,251,1.812,252,2.1,266,2.05,267,1.812,269,2.1,271,1.812,272,2.1,277,2.1,347,5.018,368,2.1,378,1.281,379,2.1,383,1.596,384,2.1,385,1.281,395,2.1,398,1.812,400,2.1,447,1.812,448,2.1,450,2.05,462,1.812,463,2.538,464,2.538,465,2.538,466,5.448,467,4.681,468,4.961,469,3.653,470,3.653,471,2.538,472,2.538,473,2.1,474,2.1,475,2.1,476,2.538,477,2.538,478,2.538,479,2.538,480,2.538]],["title/dependencies.html",[3,1.681,481,2.566]],["body/dependencies.html",[3,1.521,12,0.037,38,0.946,41,2.756,43,1.38,54,0.079,58,0.02,59,0.026,60,0.02,75,3.147,114,2.226,116,2.095,129,2.226,250,2.756,301,2.756,302,2.756,303,2.756,482,4.941,483,3.331,484,3.331,485,3.331,486,3.331,487,3.331,488,4.408,489,4.408,490,3.331,491,3.331,492,3.331,493,3.331,494,3.331,495,3.331,496,3.331,497,3.331,498,3.331,499,3.331,500,3.331,501,3.331,502,3.331,503,3.331,504,3.331,505,3.331,506,3.331,507,3.331,508,3.331]],["title/miscellaneous/enumerations.html",[509,1.296,510,3.047]],["body/miscellaneous/enumerations.html",[12,0.034,58,0.026,59,0.031,60,0.026,64,0.926,76,2.939,186,3.738,423,4.333,509,2.21,510,3.622,511,4.377,512,4.377,513,5.236]],["title/miscellaneous/functions.html",[509,1.296,514,3.047]],["body/miscellaneous/functions.html",[6,2.605,12,0.032,58,0.027,59,0.032,60,0.027,64,0.967,475,3.782,509,2.307,514,3.782,515,4.57]],["title/index.html",[64,0.543,516,2.566,517,2.566]],["body/index.html",[12,0.035,18,0.302,58,0.018,59,0.024,60,0.018,193,2.133,212,3.39,214,2.472,332,2.472,428,2.472,462,2.133,518,2.988,519,2.988,520,4.097,521,2.988,522,2.988,523,2.988,524,2.988,525,2.988,526,2.988,527,2.988,528,4.675,529,2.988,530,2.988,531,2.988,532,5.575,533,2.988,534,2.988,535,5.444,536,2.988,537,2.988,538,2.988,539,2.988,540,2.988,541,2.988,542,4.097,543,4.097,544,2.988,545,2.988,546,2.988,547,4.097,548,4.097,549,2.988,550,2.988,551,2.988,552,2.988,553,2.988,554,2.472,555,2.988,556,2.988,557,2.988,558,2.988,559,2.988,560,2.988,561,2.988,562,2.988,563,2.988,564,2.988,565,2.988,566,2.988,567,2.988,568,2.988,569,2.988,570,2.988]],["title/modules.html",[2,1.903]],["body/modules.html",[1,2.657,2,1.929,11,2.371,12,0.03,13,2.371,58,0.025,59,0.03,60,0.025,450,2.371,554,4.748,571,5.738,572,5.738,573,5.738]],["title/overview.html",[574,3.45]],["body/overview.html",[0,1.184,1,3.477,2,1.435,3,1.435,4,1.764,5,1.764,6,1.435,7,1.764,8,1.764,9,2.601,10,2.601,11,3.103,12,0.034,13,3.103,14,2.38,15,1.764,16,1.764,52,1.435,58,0.018,59,0.025,60,0.018,62,1.764,83,1.302,124,2.853,147,3.232,148,2.601,149,2.601,150,2.601,268,2.244,334,2.601,338,2.601,367,2.601,385,2.853,389,2.601,390,2.601,391,2.601,398,2.244,450,2.694,451,2.601,452,2.601,574,2.601,575,3.143,576,3.143,577,3.143]],["title/miscellaneous/variables.html",[509,1.296,578,3.047]],["body/miscellaneous/variables.html",[12,0.034,44,3.062,58,0.023,59,0.029,60,0.023,64,0.822,139,2.457,164,2.773,166,3.214,185,3.475,186,3.475,238,3.214,239,3.214,240,3.214,241,3.214,242,3.214,243,3.214,473,3.214,474,4.028,509,1.961,578,3.214,579,3.884,580,3.884,581,3.884,582,3.884,583,4.867,584,3.884,585,3.884,586,3.884,587,3.884,588,3.884]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":347,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{}}}],["0.1.13",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["0.2.31",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":367,"title":{},"body":{"classes/Logger.html":{},"overview.html":{}}}],["1,2,3].includes(+(`${statuscode}`[0",{"_index":311,"title":{},"body":{"classes/Logger.html":{}}}],["1.10.4",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":338,"title":{},"body":{"classes/Logger.html":{},"overview.html":{}}}],["2.9.1",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":334,"title":{},"body":{"classes/Logger.html":{},"overview.html":{}}}],["3.0.2",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":575,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["4.7.13",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":576,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":577,"title":{},"body":{"overview.html":{}}}],["7.1.5",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["__entity__",{"_index":447,"title":{"classes/__entity__.html":{}},"body":{"classes/__entity__.html":{},"coverage.html":{}}}],["__entity__(pascalcase",{"_index":449,"title":{},"body":{"classes/__entity__.html":{}}}],["__module__",{"_index":450,"title":{"modules/__module__.html":{}},"body":{"modules/__module__.html":{},"coverage.html":{},"modules.html":{},"overview.html":{}}}],["__module__(dotcase).controller",{"_index":457,"title":{},"body":{"modules/__module__.html":{}}}],["__module__(dotcase).service",{"_index":459,"title":{},"body":{"modules/__module__.html":{}}}],["__module__(pascalcase",{"_index":454,"title":{},"body":{"modules/__module__.html":{}}}],["__module__(pascalcase)controller",{"_index":456,"title":{},"body":{"modules/__module__.html":{}}}],["__module__(pascalcase)module",{"_index":461,"title":{},"body":{"modules/__module__.html":{}}}],["__module__(pascalcase)service",{"_index":458,"title":{},"body":{"modules/__module__.html":{}}}],["action",{"_index":421,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["admin",{"_index":513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["agent",{"_index":373,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["align",{"_index":321,"title":{},"body":{"classes/Logger.html":{}}}],["alignment",{"_index":324,"title":{},"body":{"classes/Logger.html":{}}}],["alpha.3",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":555,"title":{},"body":{"index.html":{}}}],["api",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":115,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["apiproperty()@column",{"_index":100,"title":{},"body":{"classes/Card.html":{}}}],["apiproperty()@column({nullable",{"_index":103,"title":{},"body":{"classes/Card.html":{}}}],["app",{"_index":534,"title":{},"body":{"index.html":{}}}],["application",{"_index":279,"title":{},"body":{"classes/Logger.html":{}}}],["application(message",{"_index":282,"title":{},"body":{"classes/Logger.html":{}}}],["application/http/card/card.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["application/http/news/news.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["application/http/shared/auth/auth.middleware",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":526,"title":{},"body":{"index.html":{}}}],["apply(authcheckermiddleware",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["authcheckermiddleware",{"_index":48,"title":{"injectables/AuthCheckerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"coverage.html":{}}}],["author",{"_index":563,"title":{},"body":{"index.html":{}}}],["backers",{"_index":556,"title":{},"body":{"index.html":{}}}],["background",{"_index":328,"title":{},"body":{"classes/Logger.html":{}}}],["backgroundcolor",{"_index":331,"title":{},"body":{"classes/Logger.html":{}}}],["baseentity",{"_index":86,"title":{},"body":{"classes/Card.html":{}}}],["being",{"_index":363,"title":{},"body":{"classes/Logger.html":{}}}],["between",{"_index":359,"title":{},"body":{"classes/Logger.html":{}}}],["block",{"_index":318,"title":{},"body":{"classes/Logger.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"classes/ConfigService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bottom",{"_index":345,"title":{},"body":{"classes/Logger.html":{}}}],["browse",{"_index":573,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":571,"title":{},"body":{"modules.html":{}}}],["build",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":521,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":402,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["canactivate(context",{"_index":405,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["card",{"_index":82,"title":{"classes/Card.html":{}},"body":{"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"coverage.html":{}}}],["card.controller",{"_index":152,"title":{},"body":{"modules/CardModule.html":{}}}],["card.service",{"_index":125,"title":{},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{}}}],["cardcontroller",{"_index":120,"title":{"controllers/CardController.html":{}},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"coverage.html":{}}}],["cardmodule",{"_index":11,"title":{"modules/CardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardservice",{"_index":124,"title":{"injectables/CardService.html":{}},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":427,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["center",{"_index":366,"title":{},"body":{"classes/Logger.html":{}}}],["cfonts",{"_index":303,"title":{},"body":{"classes/Logger.html":{},"dependencies.html":{}}}],["cfonts.say(message",{"_index":316,"title":{},"body":{"classes/Logger.html":{}}}],["chalk",{"_index":301,"title":{},"body":{"classes/Logger.html":{},"dependencies.html":{}}}],["chalk.bgwhite.black(\"request",{"_index":313,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.blue(\"info",{"_index":305,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.gray.bold(dayjs().format(\"hh:mm:ss",{"_index":306,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.green(\"db",{"_index":309,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.green(statuscode",{"_index":314,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.red(\"error",{"_index":307,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.red(\"request",{"_index":312,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.red(statuscode",{"_index":315,"title":{},"body":{"classes/Logger.html":{}}}],["chalk.yellow(\"app",{"_index":308,"title":{},"body":{"classes/Logger.html":{}}}],["character",{"_index":349,"title":{},"body":{"classes/Logger.html":{}}}],["class",{"_index":54,"title":{"classes/Card.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"classes/News.html":{},"classes/__entity__.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":83,"title":{},"body":{"classes/Card.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"classes/News.html":{},"classes/__entity__.html":{},"overview.html":{}}}],["cli",{"_index":233,"title":{},"body":{"classes/ConfigService.html":{}}}],["cluster___module__",{"_index":451,"title":{},"body":{"modules/__module__.html":{},"overview.html":{}}}],["cluster___module___exports",{"_index":452,"title":{},"body":{"modules/__module__.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cardmodule",{"_index":148,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_exports",{"_index":150,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_providers",{"_index":149,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":389,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":390,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_providers",{"_index":391,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["code",{"_index":262,"title":{},"body":{"classes/HttpError.html":{}}}],["color",{"_index":330,"title":{},"body":{"classes/Logger.html":{}}}],["colors",{"_index":325,"title":{},"body":{"classes/Logger.html":{}}}],["column",{"_index":110,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["configdbservice",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":163,"title":{"classes/ConfigService.html":{}},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["configservice(process.env",{"_index":238,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":304,"title":{},"body":{"classes/Logger.html":{}}}],["console.log(controller.caller",{"_index":425,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["const",{"_index":201,"title":{},"body":{"classes/ConfigService.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/HttpError.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["constructor(@injectrepository(card",{"_index":161,"title":{},"body":{"injectables/CardService.html":{}}}],["constructor(@injectrepository(news",{"_index":397,"title":{},"body":{"injectables/NewsService.html":{}}}],["constructor(env",{"_index":172,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(private",{"_index":198,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(public",{"_index":146,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["constructor(repo",{"_index":157,"title":{},"body":{"injectables/CardService.html":{},"injectables/NewsService.html":{}}}],["constructor(restfulcrudoptions",{"_index":403,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["constructor(statuscode",{"_index":254,"title":{},"body":{"classes/HttpError.html":{}}}],["consumer",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["contentlength",{"_index":292,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["context",{"_index":408,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["context.getclass",{"_index":418,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["context.gethandler",{"_index":417,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":415,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["controller",{"_index":119,"title":{"controllers/CardController.html":{},"controllers/NewsController.html":{}},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{},"coverage.html":{}}}],["controller(\"card",{"_index":138,"title":{},"body":{"controllers/CardController.html":{}}}],["controller(\"news",{"_index":388,"title":{},"body":{"controllers/NewsController.html":{}}}],["controllers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["coverage",{"_index":462,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":433,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["createcarddto",{"_index":244,"title":{"classes/CreateCardDto.html":{}},"body":{"classes/CreateCardDto.html":{},"coverage.html":{}}}],["createdat",{"_index":88,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["createdatecolumn",{"_index":96,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["createmanyroles",{"_index":413,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["createoneroles",{"_index":143,"title":{},"body":{"controllers/CardController.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["crud",{"_index":127,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["crudcontroller",{"_index":128,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["cyan",{"_index":327,"title":{},"body":{"classes/Logger.html":{}}}],["data",{"_index":273,"title":{},"body":{"interfaces/IRequestResult.html":{}}}],["database",{"_index":224,"title":{},"body":{"classes/ConfigService.html":{},"classes/Logger.html":{}}}],["database(message",{"_index":284,"title":{},"body":{"classes/Logger.html":{}}}],["dayjs",{"_index":302,"title":{},"body":{"classes/Logger.html":{},"dependencies.html":{}}}],["db_database_name",{"_index":243,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["db_host",{"_index":239,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["db_password",{"_index":242,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["db_port",{"_index":240,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["db_username",{"_index":241,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["decorators",{"_index":95,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{},"classes/News.html":{}}}],["default",{"_index":185,"title":{},"body":{"classes/ConfigService.html":{},"guards/RestfulCrudRoleGuard.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":319,"title":{},"body":{"classes/Logger.html":{}}}],["defined",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["delete",{"_index":441,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["deleteoneroles",{"_index":145,"title":{},"body":{"controllers/CardController.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":527,"title":{},"body":{"index.html":{}}}],["development",{"_index":214,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["directly",{"_index":360,"title":{},"body":{"classes/Logger.html":{}}}],["disable",{"_index":191,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IRequestResult.html":{}}}],["dist/domain/**/**.entity{.ts,.js",{"_index":228,"title":{},"body":{"classes/ConfigService.html":{}}}],["documentation",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["domain/__module__(kebabcase)/entities/__module__(dotcase).entity",{"_index":455,"title":{},"body":{"modules/__module__.html":{}}}],["domain/card/entities/card.entity",{"_index":126,"title":{},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{}}}],["domain/news/entities/news.entity",{"_index":387,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{}}}],["e2e",{"_index":544,"title":{},"body":{"index.html":{}}}],["each",{"_index":356,"title":{},"body":{"classes/Logger.html":{}}}],["efficient",{"_index":522,"title":{},"body":{"index.html":{}}}],["empty",{"_index":342,"title":{},"body":{"classes/Logger.html":{}}}],["ensurevalues",{"_index":166,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["ensurevalues(keys",{"_index":176,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":227,"title":{},"body":{"classes/ConfigService.html":{}}}],["entity",{"_index":111,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["enumerations",{"_index":510,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":175,"title":{},"body":{"classes/ConfigService.html":{},"classes/Logger.html":{}}}],["env.${key",{"_index":207,"title":{},"body":{"classes/ConfigService.html":{}}}],["environment",{"_index":362,"title":{},"body":{"classes/Logger.html":{}}}],["error",{"_index":205,"title":{},"body":{"classes/ConfigService.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"classes/Logger.html":{}}}],["error(`config",{"_index":204,"title":{},"body":{"classes/ConfigService.html":{}}}],["error(message",{"_index":286,"title":{},"body":{"classes/Logger.html":{}}}],["eslint",{"_index":190,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IRequestResult.html":{}}}],["eslint/ban",{"_index":275,"title":{},"body":{"interfaces/IRequestResult.html":{}}}],["eslint/no",{"_index":194,"title":{},"body":{"classes/ConfigService.html":{}}}],["executed",{"_index":364,"title":{},"body":{"classes/Logger.html":{}}}],["executioncontext",{"_index":406,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["export",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["express",{"_index":75,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":85,"title":{},"body":{"classes/Card.html":{},"injectables/CardService.html":{},"classes/HttpError.html":{},"injectables/NewsService.html":{}}}],["face",{"_index":320,"title":{},"body":{"classes/Logger.html":{}}}],["false",{"_index":104,"title":{},"body":{"classes/Card.html":{},"classes/ConfigService.html":{},"classes/Logger.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["feature",{"_index":419,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["field",{"_index":134,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{},"coverage.html":{}}}],["font",{"_index":317,"title":{},"body":{"classes/Logger.html":{}}}],["forroutes",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":520,"title":{},"body":{"index.html":{}}}],["function",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":514,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getaction",{"_index":409,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["getaction(handler",{"_index":422,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["getfeature(controller",{"_index":420,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["getport",{"_index":167,"title":{},"body":{"classes/ConfigService.html":{}}}],["getting",{"_index":516,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":168,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue",{"_index":170,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":182,"title":{},"body":{"classes/ConfigService.html":{}}}],["gradient",{"_index":351,"title":{},"body":{"classes/Logger.html":{}}}],["grow",{"_index":551,"title":{},"body":{"index.html":{}}}],["guard",{"_index":398,"title":{"guards/RestfulCrudRoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":399,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["handler",{"_index":416,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["height",{"_index":339,"title":{},"body":{"classes/Logger.html":{}}}],["here",{"_index":332,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["host",{"_index":216,"title":{},"body":{"classes/ConfigService.html":{}}}],["httperror",{"_index":251,"title":{"classes/HttpError.html":{}},"body":{"classes/HttpError.html":{},"coverage.html":{}}}],["httperror.prototype",{"_index":265,"title":{},"body":{"classes/HttpError.html":{}}}],["https://nestjs.com",{"_index":567,"title":{},"body":{"index.html":{}}}],["id",{"_index":89,"title":{},"body":{"classes/Card.html":{},"controllers/CardController.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/__entity__.html":{}}}],["identifier",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["if(!this.restfulcrudoptions.createmanyroles",{"_index":436,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["if(!this.restfulcrudoptions.createoneroles",{"_index":434,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["if(!this.restfulcrudoptions.deleteoneroles",{"_index":442,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["if(!this.restfulcrudoptions.readallroles",{"_index":429,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["if(!this.restfulcrudoptions.readoneroles",{"_index":431,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["if(!this.restfulcrudoptions.replaceoneroles",{"_index":445,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["if(!this.restfulcrudoptions.updateoneroles",{"_index":439,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["imageurl",{"_index":90,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{}}}],["implements",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"controllers/CardController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["import",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{}}}],["independentgradient",{"_index":353,"title":{},"body":{"classes/Logger.html":{}}}],["index",{"_index":64,"title":{"index.html":{}},"body":{"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"guards/RestfulCrudRoleGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{}}}],["info(message",{"_index":288,"title":{},"body":{"classes/Logger.html":{}}}],["infrastructure/auth/roles.enum",{"_index":77,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["infrastructure/auth/roles.guard",{"_index":131,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["infrastructure/db/db.service",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/logger/logger.middleware",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AuthCheckerMiddleware.html":{},"injectables/CardService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/NewsService.html":{}},"body":{"injectables/AuthCheckerMiddleware.html":{},"injectables/CardService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":62,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"injectables/CardService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/NewsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":160,"title":{},"body":{"injectables/CardService.html":{},"injectables/NewsService.html":{}}}],["installation",{"_index":531,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":533,"title":{},"body":{"index.html":{}}}],["interface",{"_index":266,"title":{"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{}},"body":{"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":268,"title":{},"body":{"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"overview.html":{}}}],["ip",{"_index":294,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["irequesterror",{"_index":267,"title":{"interfaces/IRequestError.html":{}},"body":{"interfaces/IRequestError.html":{},"coverage.html":{}}}],["irequestresult",{"_index":271,"title":{"interfaces/IRequestResult.html":{}},"body":{"interfaces/IRequestResult.html":{},"coverage.html":{}}}],["isnumberstring",{"_index":246,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["isproduction",{"_index":171,"title":{},"body":{"classes/ConfigService.html":{}}}],["isrequesterror",{"_index":310,"title":{},"body":{"classes/Logger.html":{}}}],["join",{"_index":558,"title":{},"body":{"index.html":{}}}],["k",{"_index":199,"title":{},"body":{"classes/ConfigService.html":{}}}],["kamil",{"_index":564,"title":{},"body":{"index.html":{}}}],["key",{"_index":187,"title":{},"body":{"classes/ConfigService.html":{},"classes/Logger.html":{}}}],["keys",{"_index":178,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":209,"title":{},"body":{"classes/ConfigService.html":{}}}],["left",{"_index":322,"title":{},"body":{"classes/Logger.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["length",{"_index":376,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["letter",{"_index":335,"title":{},"body":{"classes/Logger.html":{}}}],["letterspacing",{"_index":333,"title":{},"body":{"classes/Logger.html":{}}}],["license",{"_index":570,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":548,"title":{},"body":{"index.html":{}}}],["line",{"_index":192,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{}}}],["lineheight",{"_index":337,"title":{},"body":{"classes/Logger.html":{}}}],["lines",{"_index":343,"title":{},"body":{"classes/Logger.html":{}}}],["literal",{"_index":173,"title":{},"body":{"classes/ConfigService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["logger",{"_index":78,"title":{"classes/Logger.html":{}},"body":{"injectables/AuthCheckerMiddleware.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logger.error(`status",{"_index":261,"title":{},"body":{"classes/HttpError.html":{}}}],["logger.request(method",{"_index":377,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger.service",{"_index":79,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["logger/logger.service",{"_index":257,"title":{},"body":{"classes/HttpError.html":{}}}],["loggermiddleware",{"_index":46,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["many",{"_index":348,"title":{},"body":{"classes/Logger.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["matching",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":346,"title":{},"body":{"classes/Logger.html":{}}}],["message",{"_index":255,"title":{},"body":{"classes/HttpError.html":{},"classes/Logger.html":{}}}],["messsage",{"_index":263,"title":{},"body":{"classes/HttpError.html":{}}}],["metadata",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":296,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/ConfigService.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["middlewareconsumer",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["migration",{"_index":230,"title":{},"body":{"classes/ConfigService.html":{}}}],["migrations",{"_index":231,"title":{},"body":{"classes/ConfigService.html":{}}}],["migrationsdir",{"_index":234,"title":{},"body":{"classes/ConfigService.html":{}}}],["migrationstablename",{"_index":229,"title":{},"body":{"classes/ConfigService.html":{}}}],["miscellaneous",{"_index":509,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":206,"title":{},"body":{"classes/ConfigService.html":{}}}],["mit",{"_index":547,"title":{},"body":{"index.html":{}}}],["mode",{"_index":212,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["model",{"_index":132,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{}},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":560,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":565,"title":{},"body":{"index.html":{}}}],["name",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["nest",{"_index":528,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":569,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"modules/__module__.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":116,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"modules/__module__.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":129,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":73,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":139,"title":{},"body":{"controllers/CardController.html":{},"classes/ConfigService.html":{},"classes/Logger.html":{},"controllers/NewsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news",{"_index":378,"title":{"classes/News.html":{}},"body":{"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"coverage.html":{}}}],["news.controller",{"_index":393,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.service",{"_index":386,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscontroller",{"_index":383,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newsmodule",{"_index":13,"title":{"modules/NewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{}}}],["newsservice",{"_index":385,"title":{"injectables/NewsService.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":69,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"classes/ConfigService.html":{},"interfaces/IRequestResult.html":{},"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":70,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["node",{"_index":361,"title":{},"body":{"classes/Logger.html":{}}}],["node.js",{"_index":519,"title":{},"body":{"index.html":{}}}],["npm",{"_index":532,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":118,"title":{},"body":{"classes/Card.html":{}}}],["number",{"_index":102,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["object",{"_index":274,"title":{},"body":{"interfaces/IRequestResult.html":{}}}],["object.setprototypeof(this",{"_index":264,"title":{},"body":{"classes/HttpError.html":{}}}],["one",{"_index":350,"title":{},"body":{"classes/Logger.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["open",{"_index":549,"title":{},"body":{"index.html":{}}}],["optional",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/HttpError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["output",{"_index":341,"title":{},"body":{"classes/Logger.html":{}}}],["overview",{"_index":574,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":481,"title":{"dependencies.html":{}},"body":{}}],["pallet",{"_index":365,"title":{},"body":{"classes/Logger.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["params",{"_index":133,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["parseint(this.getvalue('db_port",{"_index":219,"title":{},"body":{"classes/ConfigService.html":{}}}],["password",{"_index":222,"title":{},"body":{"classes/ConfigService.html":{}}}],["path",{"_index":371,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["pg",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":559,"title":{},"body":{"index.html":{}}}],["port",{"_index":218,"title":{},"body":{"classes/ConfigService.html":{}}}],["postgres",{"_index":215,"title":{},"body":{"classes/ConfigService.html":{}}}],["prefix",{"_index":122,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["primary",{"_index":136,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["primarygeneratedcolumn",{"_index":112,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["primarygeneratedcolumn(\"uuid",{"_index":117,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":98,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{}}}],["private",{"_index":169,"title":{},"body":{"classes/ConfigService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["process.env.project_name",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":539,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":518,"title":{},"body":{"index.html":{}}}],["project",{"_index":550,"title":{},"body":{"index.html":{}}}],["properties",{"_index":87,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/News.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["ptoject",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":165,"title":{},"body":{"classes/ConfigService.html":{},"classes/HttpError.html":{},"classes/Logger.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["read",{"_index":428,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{},"index.html":{}}}],["readallroles",{"_index":140,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["readoneroles",{"_index":142,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["readonly",{"_index":411,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["recalculate",{"_index":355,"title":{},"body":{"classes/Logger.html":{}}}],["reflect",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":412,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["replace",{"_index":444,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["replaceoneroles",{"_index":414,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["repo",{"_index":159,"title":{},"body":{"injectables/CardService.html":{},"injectables/NewsService.html":{}}}],["repository",{"_index":530,"title":{},"body":{"index.html":{}}}],["req",{"_index":72,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{}}}],["req.user",{"_index":80,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{}}}],["request",{"_index":74,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["request(method",{"_index":290,"title":{},"body":{"classes/Logger.html":{}}}],["request.get('user",{"_index":372,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request.user",{"_index":424,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["require('dotenv').config",{"_index":197,"title":{},"body":{"classes/ConfigService.html":{}}}],["requires",{"_index":196,"title":{},"body":{"classes/ConfigService.html":{}}}],["res",{"_index":67,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}],["response",{"_index":68,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["response.get('content",{"_index":375,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.on('close",{"_index":374,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["restfulcrudoptions",{"_index":401,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["restfulcrudroleguard",{"_index":130,"title":{"guards/RestfulCrudRoleGuard.html":{}},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{},"coverage.html":{}}}],["result",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":208,"title":{},"body":{"classes/ConfigService.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["returns",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/ConfigService.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["rimraf",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":76,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"controllers/CardController.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{},"miscellaneous/enumerations.html":{}}}],["role.admin",{"_index":81,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["role.user",{"_index":141,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["roles.enum",{"_index":410,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["run",{"_index":535,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":523,"title":{},"body":{"index.html":{}}}],["server",{"_index":524,"title":{},"body":{"index.html":{}}}],["service",{"_index":147,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{},"modules/__module__.html":{},"overview.html":{}}}],["setdescription(`the",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle(`${process.env.project_name",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":525,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"modules/__module__.html":{},"index.html":{}}}],["space",{"_index":340,"title":{},"body":{"classes/Logger.html":{}}}],["spacing",{"_index":336,"title":{},"body":{"classes/Logger.html":{}}}],["sponsors",{"_index":553,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db.service.ts",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.enum.ts",{"_index":511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:16",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["src/application/http/card/card.controller.ts",{"_index":121,"title":{},"body":{"controllers/CardController.html":{},"coverage.html":{}}}],["src/application/http/card/card.module.ts",{"_index":151,"title":{},"body":{"modules/CardModule.html":{}}}],["src/application/http/card/card.service.ts",{"_index":154,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/application/http/card/card.service.ts:7",{"_index":158,"title":{},"body":{"injectables/CardService.html":{}}}],["src/application/http/news/news.controller.ts",{"_index":384,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["src/application/http/news/news.module.ts",{"_index":392,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/application/http/news/news.service.ts",{"_index":395,"title":{},"body":{"injectables/NewsService.html":{},"coverage.html":{}}}],["src/application/http/news/news.service.ts:7",{"_index":396,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/application/http/shared/auth/auth.middleware.ts",{"_index":63,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"coverage.html":{}}}],["src/application/http/shared/auth/auth.middleware.ts:8",{"_index":71,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{}}}],["src/application/http/shared/interfaces/irequesterror.ts",{"_index":269,"title":{},"body":{"interfaces/IRequestError.html":{},"coverage.html":{}}}],["src/application/http/shared/interfaces/irequestresult.ts",{"_index":272,"title":{},"body":{"interfaces/IRequestResult.html":{},"coverage.html":{}}}],["src/domain/card/dtos/createcarddto.ts",{"_index":245,"title":{},"body":{"classes/CreateCardDto.html":{},"coverage.html":{}}}],["src/domain/card/dtos/createcarddto.ts:12",{"_index":247,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["src/domain/card/dtos/createcarddto.ts:6",{"_index":248,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["src/domain/card/dtos/createcarddto.ts:9",{"_index":249,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["src/domain/card/entities/card.entity.ts",{"_index":84,"title":{},"body":{"classes/Card.html":{},"coverage.html":{}}}],["src/domain/card/entities/card.entity.ts:11",{"_index":105,"title":{},"body":{"classes/Card.html":{}}}],["src/domain/card/entities/card.entity.ts:15",{"_index":109,"title":{},"body":{"classes/Card.html":{}}}],["src/domain/card/entities/card.entity.ts:19",{"_index":101,"title":{},"body":{"classes/Card.html":{}}}],["src/domain/card/entities/card.entity.ts:22",{"_index":97,"title":{},"body":{"classes/Card.html":{}}}],["src/domain/card/entities/card.entity.ts:25",{"_index":108,"title":{},"body":{"classes/Card.html":{}}}],["src/domain/card/entities/card.entity.ts:7",{"_index":99,"title":{},"body":{"classes/Card.html":{}}}],["src/domain/news/entities/news.entity.ts",{"_index":379,"title":{},"body":{"classes/News.html":{},"coverage.html":{}}}],["src/domain/news/entities/news.entity.ts:11",{"_index":380,"title":{},"body":{"classes/News.html":{}}}],["src/domain/news/entities/news.entity.ts:14",{"_index":382,"title":{},"body":{"classes/News.html":{}}}],["src/domain/news/entities/news.entity.ts:8",{"_index":381,"title":{},"body":{"classes/News.html":{}}}],["src/infrastructure/auth/roles.enum.ts",{"_index":512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/infrastructure/auth/roles.guard.ts",{"_index":400,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{},"coverage.html":{}}}],["src/infrastructure/auth/roles.guard.ts:21",{"_index":407,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["src/infrastructure/auth/roles.guard.ts:6",{"_index":404,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["src/infrastructure/db/db.service.ts",{"_index":164,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/db/db.service.ts:10",{"_index":184,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/infrastructure/db/db.service.ts:19",{"_index":177,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/infrastructure/db/db.service.ts:24",{"_index":179,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/infrastructure/db/db.service.ts:28",{"_index":188,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/infrastructure/db/db.service.ts:33",{"_index":180,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/infrastructure/db/db.service.ts:6",{"_index":174,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/infrastructure/error/httperror.ts",{"_index":252,"title":{},"body":{"classes/HttpError.html":{},"coverage.html":{}}}],["src/infrastructure/error/httperror.ts:4",{"_index":256,"title":{},"body":{"classes/HttpError.html":{}}}],["src/infrastructure/logger/logger.middleware.ts",{"_index":368,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/infrastructure/logger/logger.middleware.ts:8",{"_index":370,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/infrastructure/logger/logger.service.ts",{"_index":277,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{}}}],["src/infrastructure/logger/logger.service.ts:11",{"_index":287,"title":{},"body":{"classes/Logger.html":{}}}],["src/infrastructure/logger/logger.service.ts:15",{"_index":283,"title":{},"body":{"classes/Logger.html":{}}}],["src/infrastructure/logger/logger.service.ts:19",{"_index":285,"title":{},"body":{"classes/Logger.html":{}}}],["src/infrastructure/logger/logger.service.ts:23",{"_index":295,"title":{},"body":{"classes/Logger.html":{}}}],["src/infrastructure/logger/logger.service.ts:28",{"_index":300,"title":{},"body":{"classes/Logger.html":{}}}],["src/infrastructure/logger/logger.service.ts:45",{"_index":298,"title":{},"body":{"classes/Logger.html":{}}}],["src/infrastructure/logger/logger.service.ts:7",{"_index":289,"title":{},"body":{"classes/Logger.html":{}}}],["src/infrastructure/swagger/configuration.ts",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration",{"_index":235,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/migration/*.ts",{"_index":232,"title":{},"body":{"classes/ConfigService.html":{}}}],["ssl",{"_index":236,"title":{},"body":{"classes/ConfigService.html":{}}}],["start",{"_index":536,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":538,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":540,"title":{},"body":{"index.html":{}}}],["started",{"_index":517,"title":{"index.html":{}},"body":{}}],["starter",{"_index":529,"title":{},"body":{"index.html":{}}}],["statements",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":278,"title":{},"body":{"classes/Logger.html":{}}}],["status",{"_index":270,"title":{},"body":{"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{}}}],["statuscode",{"_index":253,"title":{},"body":{"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["stay",{"_index":561,"title":{},"body":{"index.html":{}}}],["string",{"_index":94,"title":{},"body":{"classes/Card.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["subtitle",{"_index":280,"title":{},"body":{"classes/Logger.html":{}}}],["subtitle(message",{"_index":297,"title":{},"body":{"classes/Logger.html":{}}}],["super(message",{"_index":258,"title":{},"body":{"classes/HttpError.html":{}}}],["super(repo",{"_index":162,"title":{},"body":{"injectables/CardService.html":{},"injectables/NewsService.html":{}}}],["support",{"_index":554,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":572,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["swaggerconfig",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["switch(action",{"_index":426,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["synchronize",{"_index":226,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["temperature",{"_index":91,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{}}}],["test",{"_index":543,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":546,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":545,"title":{},"body":{"index.html":{}}}],["tests",{"_index":542,"title":{},"body":{"index.html":{}}}],["text",{"_index":323,"title":{},"body":{"classes/Logger.html":{}}}],["thanks",{"_index":552,"title":{},"body":{"index.html":{}}}],["this.env[key",{"_index":202,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('db_database_name",{"_index":225,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('db_host",{"_index":217,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('db_password",{"_index":223,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('db_username",{"_index":221,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('node_env",{"_index":213,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('port",{"_index":211,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":210,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.isproduction",{"_index":237,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.message",{"_index":260,"title":{},"body":{"classes/HttpError.html":{}}}],["this.restfulcrudoptions.createmanyroles.includes(user.role",{"_index":437,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["this.restfulcrudoptions.createoneroles.includes(user.role",{"_index":435,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["this.restfulcrudoptions.deleteoneroles.includes(user.role",{"_index":443,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["this.restfulcrudoptions.readallroles.includes(user.role",{"_index":430,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["this.restfulcrudoptions.readoneroles.includes(user.role",{"_index":432,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["this.restfulcrudoptions.replaceoneroles.includes(user.role",{"_index":446,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["this.restfulcrudoptions.updateoneroles.includes(user.role",{"_index":440,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["this.statuscode",{"_index":259,"title":{},"body":{"classes/HttpError.html":{}}}],["throw",{"_index":203,"title":{},"body":{"classes/ConfigService.html":{}}}],["throwonmissing",{"_index":183,"title":{},"body":{"classes/ConfigService.html":{}}}],["timestamp",{"_index":107,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["title",{"_index":281,"title":{},"body":{"classes/Logger.html":{}}}],["title(message",{"_index":299,"title":{},"body":{"classes/Logger.html":{}}}],["tools/templates/application/http/__controller__.controller.ts",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["tools/templates/application/http/__module__.module.ts",{"_index":453,"title":{},"body":{"modules/__module__.html":{}}}],["tools/templates/application/http/__service__.service.ts",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["tools/templates/domain/__entity__.entity.ts",{"_index":448,"title":{},"body":{"classes/__entity__.html":{},"coverage.html":{}}}],["top",{"_index":344,"title":{},"body":{"classes/Logger.html":{}}}],["touch",{"_index":562,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["transition",{"_index":358,"title":{},"body":{"classes/Logger.html":{}}}],["transitiongradient",{"_index":357,"title":{},"body":{"classes/Logger.html":{}}}],["transparent",{"_index":329,"title":{},"body":{"classes/Logger.html":{}}}],["true",{"_index":137,"title":{},"body":{"controllers/CardController.html":{},"classes/ConfigService.html":{},"classes/Logger.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["twitter",{"_index":568,"title":{},"body":{"index.html":{}}}],["two",{"_index":352,"title":{},"body":{"classes/Logger.html":{}}}],["type",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"classes/ConfigService.html":{},"classes/CreateCardDto.html":{},"classes/HttpError.html":{},"interfaces/IRequestError.html":{},"interfaces/IRequestResult.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"guards/RestfulCrudRoleGuard.html":{},"classes/__entity__.html":{},"coverage.html":{}}}],["typeorm",{"_index":114,"title":{},"body":{"classes/Card.html":{},"injectables/CardService.html":{},"classes/News.html":{},"injectables/NewsService.html":{},"classes/__entity__.html":{},"dependencies.html":{}}}],["typeormcrudservice",{"_index":155,"title":{},"body":{"injectables/CardService.html":{},"injectables/NewsService.html":{}}}],["typeormmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{}}}],["typeormmodule.forfeature([__module__(pascalcase",{"_index":460,"title":{},"body":{"modules/__module__.html":{}}}],["typeormmodule.forfeature([card",{"_index":153,"title":{},"body":{"modules/CardModule.html":{}}}],["typeormmodule.forfeature([news",{"_index":394,"title":{},"body":{"modules/NewsModule.html":{}}}],["typeormmodule.forroot(configdbservice.gettypeormconfig",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":181,"title":{},"body":{"classes/ConfigService.html":{}}}],["types",{"_index":276,"title":{},"body":{"interfaces/IRequestResult.html":{}}}],["typescript",{"_index":193,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IRequestResult.html":{},"index.html":{}}}],["ui",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":200,"title":{},"body":{"classes/ConfigService.html":{}}}],["unit",{"_index":541,"title":{},"body":{"index.html":{}}}],["update",{"_index":438,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{}}}],["updatedat",{"_index":92,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["updatedatecolumn",{"_index":113,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{},"classes/__entity__.html":{}}}],["updatedatecolumn({type",{"_index":106,"title":{},"body":{"classes/Card.html":{},"classes/News.html":{}}}],["updateoneroles",{"_index":144,"title":{},"body":{"controllers/CardController.html":{},"guards/RestfulCrudRoleGuard.html":{}}}],["url",{"_index":291,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["use",{"_index":65,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":66,"title":{},"body":{"injectables/AuthCheckerMiddleware.html":{}}}],["use(request",{"_index":369,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useguards",{"_index":123,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["user",{"_index":423,"title":{},"body":{"guards/RestfulCrudRoleGuard.html":{},"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":293,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["username",{"_index":220,"title":{},"body":{"classes/ConfigService.html":{}}}],["uuid",{"_index":135,"title":{},"body":{"controllers/CardController.html":{},"controllers/NewsController.html":{}}}],["validator",{"_index":250,"title":{},"body":{"classes/CreateCardDto.html":{},"dependencies.html":{}}}],["value",{"_index":186,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":195,"title":{},"body":{"classes/ConfigService.html":{}}}],["variable",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":578,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthCheckerMiddleware.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["want",{"_index":354,"title":{},"body":{"classes/Logger.html":{}}}],["watch",{"_index":537,"title":{},"body":{"index.html":{}}}],["website",{"_index":566,"title":{},"body":{"index.html":{}}}],["white",{"_index":326,"title":{},"body":{"classes/Logger.html":{}}}],["windspeed",{"_index":93,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{}}}],["you'd",{"_index":557,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules/NewsModule.html":{},"modules/__module__.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCardModule\n\nCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCardModule->AppModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            NewsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NewsModule } from '@application/http/news/news.module'\nimport { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { CardModule } from '@application/http/card/card.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { configDBService } from './infrastructure/db/db.service'\nimport { LoggerMiddleware } from '@infrastructure/logger/logger.middleware';\nimport { AuthCheckerMiddleware } from '@application/http/shared/auth/auth.middleware'\n\n@Module({\n  imports: [NewsModule,  ConfigModule.forRoot(), TypeOrmModule.forRoot(configDBService.getTypeOrmConfig()), CardModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthCheckerMiddleware, LoggerMiddleware)\n      .forRoutes('/');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthCheckerMiddleware.html":{"url":"injectables/AuthCheckerMiddleware.html","title":"injectable - AuthCheckerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthCheckerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/http/shared/auth/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/application/http/shared/auth/auth.middleware.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { Role } from '../../../../infrastructure/auth/roles.enum';\n// import { Logger } from './logger.service'\n\n@Injectable()\nexport class AuthCheckerMiddleware implements NestMiddleware {\n  use(req: any, res: Response, next: NextFunction) {\n    req.user = {\n      role: Role.Admin\n    }\n    next();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/card/entities/card.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                temperature\n                            \n                            \n                                updatedAt\n                            \n                            \n                                windSpeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/entities/card.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/entities/card.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/entities/card.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/entities/card.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/entities/card.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windSpeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/entities/card.entity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, BaseEntity } from \"typeorm\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n@Entity()\nexport class Card extends BaseEntity{\n\n    @PrimaryGeneratedColumn(\"uuid\")\n    id: string;\n\n    @ApiProperty()\n    @Column({ nullable: false })\n    temperature: number;\n\n    @ApiProperty()\n    @Column({ nullable: false })\n    windSpeed: number\n\n    @ApiProperty()\n    @Column()\n    imageUrl: string;\n\n    @CreateDateColumn()\n    createdAt: string;\n\n    @UpdateDateColumn({ type: \"timestamp\" })\n    updatedAt: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CardController.html":{"url":"controllers/CardController.html","title":"controller - CardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/http/card/card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                card\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from '@nestjs/common';\nimport { CardService } from './card.service';\nimport { Card } from '@domain/card/entities/card.entity';\nimport { Crud, CrudController } from \"@nestjsx/crud\";\nimport { RestfulCrudRoleGuard } from '@infrastructure/auth/roles.guard';\nimport { Role } from '@infrastructure/auth/roles.enum'\n@Crud({\n    model: {\n      type: Card,\n    },\n    params: {\n        id: {\n          field: 'id',\n          type: 'uuid',\n          primary: true,\n        },\n    },\n})\n@Controller(\"card\")\n@UseGuards( new RestfulCrudRoleGuard({\n        readAllRoles: [Role.Admin, Role.User],\n        readOneRoles: [Role.Admin, Role.User],\n        createOneRoles: [Role.Admin],\n        updateOneRoles: [Role.Admin],\n        deleteOneRoles: [Role.Admin]\n}))\nexport class CardController implements CrudController {\n  constructor(public service: CardService) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardModule\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_CardModule_exports\n\n\n\n\nCardService \n\nCardService \n\n\n\nCardModule\n\nCardModule\n\nCardService  -->\n\nCardModule->CardService \n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/application/http/card/card.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CardController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { Card } from \"@domain/card/entities/card.entity\"\nimport { CardController } from './card.controller';\nimport { CardService } from './card.service';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([Card])],\n    providers: [CardService],\n    exports: [CardService],\n    controllers: [CardController],\n})\nexport class CardModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/http/card/card.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo)\n                    \n                \n                        \n                            \n                                Defined in src/application/http/card/card.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Card } from '@domain/card/entities/card.entity'\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TypeOrmCrudService } from \"@nestjsx/crud-typeorm\";\n\n@Injectable()\nexport class CardService extends TypeOrmCrudService {\n  constructor(@InjectRepository(Card) repo) {\n    super(repo);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/db/db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getPort\n                            \n                            \n                                    Public\n                                getTypeOrmConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                            \n                                    Public\n                                isProduction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/db/db.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ensureValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/db/db.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPort()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/db/db.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTypeOrmConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypeOrmConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/db/db.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/db/db.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isProduction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduction()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/db/db.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nrequire('dotenv').config();\n\nclass ConfigService {\n\n  constructor(private env: { [k: string]: string | undefined }) { }\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key];\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`);\n    }\n\n    return value;\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach(k => this.getValue(k, true));\n    return this;\n  }\n\n  public getPort() {\n    return this.getValue('PORT', true);\n  }\n\n  public isProduction() {\n    const mode = this.getValue('NODE_ENV', false);\n    return mode != 'development';\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions {\n    return {\n      type: 'postgres',\n\n      host: this.getValue('DB_HOST'),\n      port: parseInt(this.getValue('DB_PORT')),\n      username: this.getValue('DB_USERNAME'),\n      password: this.getValue('DB_PASSWORD'),\n      database: this.getValue('DB_DATABASE_NAME'),\n      synchronize: true,\n\n      entities: ['dist/domain/**/**.entity{.ts,.js}'],\n\n      migrationsTableName: 'migration',\n\n      migrations: ['src/migration/*.ts'],\n\n      cli: {\n        migrationsDir: 'src/migration',\n      },\n\n      ssl: this.isProduction(),\n    };\n  }\n\n}\n\nconst configDBService = new ConfigService(process.env)\n  .ensureValues([\n    'DB_HOST',\n    'DB_PORT',\n    'DB_USERNAME',\n    'DB_PASSWORD',\n    'DB_DATABASE_NAME'\n  ]);\n\nexport { configDBService };\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardDto.html":{"url":"classes/CreateCardDto.html","title":"class - CreateCardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/card/dtos/createCardDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imageUrl\n                            \n                            \n                                temperature\n                            \n                            \n                                windSpeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/dtos/createCardDto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/dtos/createCardDto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windSpeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/card/dtos/createCardDto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumberString } from 'class-validator';\n\nexport class CreateCardDto {\n\n    @IsNumberString()\n    temperature: number\n\n    @IsNumberString()\n    windSpeed: number\n\n    @IsNumberString()\n    imageUrl: string\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpError.html":{"url":"classes/HttpError.html","title":"class - HttpError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/error/HttpError.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/error/HttpError.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusCode\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/infrastructure/error/HttpError.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '../logger/logger.service'\n\nexport class HttpError extends Error {\n    public statusCode;\n\n    constructor(statusCode: number, message: string) {\n        super(message);\n        this.statusCode = statusCode;\n        this.message = message;\n        Logger.error(`STATUS CODE: ${statusCode} MESSSAGE: ${message}`)\n\n        Object.setPrototypeOf(this, HttpError.prototype);\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestError.html":{"url":"interfaces/IRequestError.html","title":"interface - IRequestError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequestError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/http/shared/interfaces/IRequestError.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        status\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRequestError {\n    status: string,\n    statusCode: number,\n    error: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestResult.html":{"url":"interfaces/IRequestResult.html","title":"interface - IRequestResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequestResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/http/shared/interfaces/IRequestResult.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        status\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRequestResult {\n    status: string,\n    statusCode: number,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    data?: object\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                application\n                            \n                            \n                                    Static\n                                database\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                request\n                            \n                            \n                                    Static\n                                subtitle\n                            \n                            \n                                    Static\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            application\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    application(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            database\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    database(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, url: string, statusCode: number, contentLength: string, userAgent: string, ip: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentLength\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ip\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            subtitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subtitle(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            title\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    title(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as chalk from 'chalk';\nimport * as dayjs from 'dayjs';\nimport * as CFonts from 'cfonts';\n\nexport class Logger {\n\n    public static info(message: string): void {\n        console.log(\"[\" + chalk.blue(\"INFO\") + `][` + chalk.gray.bold(dayjs().format(\"HH:mm:ss\")) + `]  ${message}`);\n    }\n\n    public static error(message: string): void {\n        console.log(\"[\" + chalk.red(\"ERROR\") + `][` + chalk.gray.bold(dayjs().format(\"HH:mm:ss\")) + `]  ${message}`);\n    }\n\n    public static application(message: string): void {\n        console.log(\"[\" + chalk.yellow(\"APP\") + `][` + chalk.gray.bold(dayjs().format(\"HH:mm:ss\")) + `]  ${message}`);\n    }\n\n    public static database(message: string): void {\n        console.log(\"[\" + chalk.green(\"DB\") + `][` + chalk.gray.bold(dayjs().format(\"HH:mm:ss\")) + `]  ${message}`);\n    }\n\n    public static request(method: string, url: string, statusCode: number, contentLength: string, userAgent: string, ip: string): void {\n        const isRequestError = ![1,2,3].includes(+(`${statusCode}`[0]));\n        console.log(\"[\" + (isRequestError ? chalk.red(\"REQUEST ERROR\") : chalk.bgWhite.black(\"REQUEST\")) + `] ${method} ${url} ${!isRequestError ? chalk.green(statusCode) : chalk.red(statusCode)} ${contentLength} - ${userAgent} ${ip}`)\n    }\n\n    public static title(message: string): void{\n        CFonts.say(message, {\n            font: 'block',              // define the font face\n            align: 'left',              // define text alignment\n            colors: ['white', 'cyan'],         // define all colors\n            background: 'transparent',  // define the background color, you can also use `backgroundColor` here as key\n            letterSpacing: 3,           // define letter spacing\n            lineHeight: 2,              // define the line height\n            space: true,                // define if the output text should have empty lines on top and on the bottom\n            maxLength: '0',             // define how many character can be on one line\n            gradient: false,            // define your two gradient colors\n            independentGradient: false, // define if you want to recalculate the gradient for each new line\n            transitionGradient: false,  // define if this is a transition between colors directly\n            env: 'node'                 // define the environment CFonts is being executed in\n        });\n    }\n\n    public static subtitle(message: string): void{\n        CFonts.say(message, {\n            font: 'pallet',              // define the font face\n            align: 'center',              // define text alignment\n            colors: ['white', 'cyan'],         // define all colors\n            background: 'transparent',  // define the background color, you can also use `backgroundColor` here as key\n            letterSpacing: 1,           // define letter spacing\n            lineHeight: 1,              // define the line height\n            space: true,                // define if the output text should have empty lines on top and on the bottom\n            maxLength: '0',             // define how many character can be on one line\n            gradient: false,            // define your two gradient colors\n            independentGradient: false, // define if you want to recalculate the gradient for each new line\n            transitionGradient: false,  // define if this is a transition between colors directly\n            env: 'node'                 // define the environment CFonts is being executed in\n        });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/logger/logger.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/logger/logger.middleware.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { Logger } from './logger.service'\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n\n  use(request: Request, response: Response, next: NextFunction): void {\n    const { ip, method, path: url } = request;\n    const userAgent = request.get('user-agent') || '';\n\n    response.on('close', () => {\n      const { statusCode } = response;\n      const contentLength = response.get('content-length');\n\n      Logger.request(method, url, statusCode, contentLength, userAgent, ip);\n    });\n\n    next();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/news/entities/news.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/news/entities/news.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/news/entities/news.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/domain/news/entities/news.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\n@Entity()\nexport class News {\n\n    @PrimaryGeneratedColumn(\"uuid\")\n    id: string;\n\n    @CreateDateColumn()\n    createdAt: string;\n\n    @UpdateDateColumn({ type: \"timestamp\" })\n    updatedAt: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/http/news/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from '@nestjs/common';\nimport { NewsService } from './news.service';\nimport { News } from '@domain/news/entities/news.entity';\nimport { Crud, CrudController } from \"@nestjsx/crud\";\n\nimport { Role } from '@infrastructure/auth/roles.enum'\nimport { RestfulCrudRoleGuard } from '@infrastructure/auth/roles.guard';\n\n@Crud({\n    model: {\n      type: News,\n    },\n    params: {\n        id: {\n          field: 'id',\n          type: 'uuid',\n          primary: true,\n        },\n    },\n})\n@Controller(\"news\")\n@UseGuards( new RestfulCrudRoleGuard({\n  readAllRoles: [Role.Admin, Role.User],\n  readOneRoles: [Role.Admin, Role.User],\n}))\nexport class NewsController implements CrudController {\n  constructor(public service: NewsService) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nNewsService \n\nNewsService \n\n\n\nNewsModule\n\nNewsModule\n\nNewsService  -->\n\nNewsModule->NewsService \n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/application/http/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { News } from \"@domain/news/entities/news.entity\"\nimport { NewsController } from './news.controller';\nimport { NewsService } from './news.service';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([News])],\n    providers: [NewsService],\n    exports: [NewsService],\n    controllers: [NewsController],\n})\nexport class NewsModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsService.html":{"url":"injectables/NewsService.html","title":"injectable - NewsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/http/news/news.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo)\n                    \n                \n                        \n                            \n                                Defined in src/application/http/news/news.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { News } from '@domain/news/entities/news.entity'\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TypeOrmCrudService } from \"@nestjsx/crud-typeorm\";\n\n@Injectable()\nexport class NewsService extends TypeOrmCrudService {\n  constructor(@InjectRepository(News) repo) {\n    super(repo);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RestfulCrudRoleGuard.html":{"url":"guards/RestfulCrudRoleGuard.html","title":"guard - RestfulCrudRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RestfulCrudRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infrastructure/auth/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                restfulCrudOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(restfulCrudOptions: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/auth/roles.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        restfulCrudOptions\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/auth/roles.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\nimport { getAction } from '@nestjsx/crud'\nimport { Role } from './roles.enum'\n\n@Injectable()\nexport class RestfulCrudRoleGuard implements CanActivate {\n  \n    constructor(\n    //   private readonly reflector: Reflector,\n      public restfulCrudOptions: {\n          readAllRoles?: Role [],\n          readOneRoles?: Role [],\n          createOneRoles?: Role [],\n          createManyRoles?: Role [],\n          replaceOneRoles?: Role [],\n          updateOneRoles?: Role [],\n          deleteOneRoles?: Role [] \n      }\n    ) {}\n\n  canActivate(context: ExecutionContext): boolean {\n\n    const request = context.switchToHttp().getRequest()\n    const handler = context.getHandler()\n    const controller = context.getClass()\n\n    // const feature = getFeature(controller)\n    const action = getAction(handler)  \n    const user = request.user\n\n    // console.log(controller.caller)\n\n    switch(action) {\n        case 'Read-All' : {\n            if(!this.restfulCrudOptions.readAllRoles) return false;\n            return this.restfulCrudOptions.readAllRoles.includes(user.role)\n        }\n\n        case 'Read-One' : {\n            if(!this.restfulCrudOptions.readOneRoles) return false;\n            return this.restfulCrudOptions.readOneRoles.includes(user.role)\n        } \n\n        case 'Create-One' : {\n            if(!this.restfulCrudOptions.createOneRoles) return false;\n            return this.restfulCrudOptions.createOneRoles.includes(user.role)\n        }\n\n        case 'Create-Many' : {\n            if(!this.restfulCrudOptions.createManyRoles) return false;\n            return this.restfulCrudOptions.createManyRoles.includes(user.role)\n        }\n\n        case 'Update-One' : {\n            if(!this.restfulCrudOptions.updateOneRoles) return false;\n            return this.restfulCrudOptions.updateOneRoles.includes(user.role)\n        }\n\n        case 'Delete-One' : {\n            if(!this.restfulCrudOptions.deleteOneRoles) return false;\n            return this.restfulCrudOptions.deleteOneRoles.includes(user.role)\n        }\n\n        case 'Replace-One' : {\n            if(!this.restfulCrudOptions.replaceOneRoles) return false;\n            return this.restfulCrudOptions.replaceOneRoles.includes(user.role)\n        }\n\n        default : {\n            return true\n        }\n    }\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/__entity__.html":{"url":"classes/__entity__.html","title":"class - __entity__","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  __entity__\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            tools/templates/domain/__entity__.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\n@Entity()\nexport class __entity__(pascalCase) {\n\n    @PrimaryGeneratedColumn(\"uuid\")\n    id: string;\n\n    @CreateDateColumn()\n    createdAt: string;\n\n    @UpdateDateColumn({ type: \"timestamp\" })\n    updatedAt: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/__module__.html":{"url":"modules/__module__.html","title":"module - __module__","body":"\n                   \n\n\n\n\n    Modules\n    __module__\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster___module__\n\n\n\ncluster___module___exports\n\n\n\n\nService \n\nService \n\n\n\n__module__\n\n__module__\n\nService  -->\n\n__module__->Service \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            tools/templates/application/http/__module__.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { __module__(pascalCase) } from \"@domain/__module__(kebabCase)/entities/__module__(dotCase).entity\"\nimport { __module__(pascalCase)Controller } from './__module__(dotCase).controller';\nimport { __module__(pascalCase)Service } from './__module__(dotCase).service';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([__module__(pascalCase)])],\n    providers: [__module__(pascalCase)Service],\n    exports: [__module__(pascalCase)Service],\n    controllers: [__module__(pascalCase)Controller],\n})\nexport class __module__(pascalCase)Module {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/application/http/card/card.controller.ts\n            \n            controller\n            CardController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/application/http/card/card.service.ts\n            \n            injectable\n            CardService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/http/news/news.controller.ts\n            \n            controller\n            NewsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/application/http/news/news.service.ts\n            \n            injectable\n            NewsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/http/shared/auth/auth.middleware.ts\n            \n            injectable\n            AuthCheckerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/http/shared/interfaces/IRequestError.ts\n            \n            interface\n            IRequestError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/http/shared/interfaces/IRequestResult.ts\n            \n            interface\n            IRequestResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/card/dtos/createCardDto.ts\n            \n            class\n            CreateCardDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/card/entities/card.entity.ts\n            \n            class\n            Card\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/news/entities/news.entity.ts\n            \n            class\n            News\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infrastructure/auth/roles.guard.ts\n            \n            guard\n            RestfulCrudRoleGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infrastructure/db/db.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infrastructure/db/db.service.ts\n            \n            variable\n            configDBService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/error/HttpError.ts\n            \n            class\n            HttpError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/logger/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/logger/logger.service.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/infrastructure/swagger/configuration.ts\n            \n            variable\n            SwaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                tools/templates/application/http/__controller__.controller.ts\n            \n            controller\n            __module__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                tools/templates/application/http/__service__.service.ts\n            \n            injectable\n            __module__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                tools/templates/domain/__entity__.entity.ts\n            \n            class\n            __entity__\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.13\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^5.0.0-alpha.3\n        \n            @nestjsx/crud-typeorm : ^5.0.0-alpha.3\n        \n            cfonts : ^2.9.1\n        \n            chalk : ^4.1.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dayjs : ^1.10.4\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.31\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/auth/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        __module__\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster___module__\n\n\n\ncluster___module___exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CardModule\n\n\n\ncluster_CardModule_exports\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nService \n\nService \n\n\n\n__module__\n\n__module__\n\nService  -->\n\n__module__->Service \n\n\n\n\n\nCardModule\n\nCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCardModule->AppModule\n\n\n\n\n\nCardService \n\nCardService \n\nCardService  -->\n\nCardModule->CardService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\n\n\nNewsService \n\nNewsService \n\nNewsService  -->\n\nNewsModule->NewsService \n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configDBService   (src/.../db.service.ts)\n                        \n                        \n                            SwaggerConfig   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/db/db.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configDBService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ConfigService(process.env)\n  .ensureValues([\n    'DB_HOST',\n    'DB_PORT',\n    'DB_USERNAME',\n    'DB_PASSWORD',\n    'DB_DATABASE_NAME'\n  ])\n                        \n                    \n\n\n            \n        \n\n    src/infrastructure/swagger/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SwaggerConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n.setTitle(`${process.env.PROJECT_NAME} API`)\n.setDescription(`The ${process.env.PROJECT_NAME} ptoject API`)\n.setVersion('1.0')\n.build()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
